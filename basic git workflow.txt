Resources
=========

* [ProGit book by scott chacon](http://git-scm.com/book)
* [Git reference docs](http://git-scm.com/doc)
* [GitHub help pages](https://help.github.com/)

Basic Git Work Flow
===================
1. install a local client [msysgit](http://msysgit.github.io/)
2. sign up for some remote repository service [Github](https://github.com/)
3. 
3. create a fresh clean repository - to use git-gui right click on the folder in which you want to create new repo, select "create new repo" then enter new name you want the repo folder to have - or use the command line

        c:\>git init my_new_repo

4. clone an existing one

        c:\> git clone https://github.com/SunPower/BasicGitWorkFlow


11:22 AMKat HanI'm emailing myself these notes that you are messaging me, by the way


11:22 AMMark Mikofskicommunicator is part of outlook all of your conversations are stored in outlook
under "conversation history"


11:23 AMKat HanYes, but an email to myself is my "to do" list


11:23 AMMark Mikofskiuse trello


11:23 AMKat HanI just started looking in to trello


11:23 AMMark Mikofskihttps://trello.com/markmikofski/recommend 


11:23 AMKat HanWe had a whole training about how people manage their to do lists on Friday


11:23 AMMark Mikofskisign up and I get 1 month of free stickers!
yay!


11:23 AMKat Hanfree stickers?


11:24 AMMark Mikofskitrello is sugar
I have no idea what the stickers are for


11:24 AMKat Hanlike, delicious and makes you a bit sick sometimes?


11:25 AMMark Mikofskithat would make more sense, but I meant as in easy, not hard on brain, actually the more I think about it, it makes no sense, completely backwards


11:25 AMKat Hanha!
well, wait, we were at step 1
is there a step 2?


11:25 AMMark Mikofskias I was saying step 2: do some work, eg write some docs, make some models, write some code, etc
1. create a fresh clean repository (git init my_new_repo) or clone an existing one (git clone https://github.com/SunPower/SimEng)
step 3: save your changes in the repository (git add file1 file2 file3) then (git commit -m "add paragraph explaining basic version control workflow")
step 4: after sever commits push your changes up to the remote (git push)


11:27 AMKat HanThis is really going to help my modeling!!!


11:29 AMMark Mikofskistep X: later when you're at a different laptop and want to make a quick change or if you work with someone else, pull the changes from [your other machine|your coworker] (git pull)
step Y: you had a totally awesome idea, but you don't want to f* up your stuff that is **finally** working so you create a branch (git checkout -b myNewIdea)


11:30 AMKat Hanbut the other laptop needs to have a local client
right?


11:31 AMMark Mikofskistep 0 is for everyone


11:31 AMKat HanOr is there a web interface?


11:31 AMMark Mikofskiyes


11:31 AMKat Hana branch!  That's brilliant.  


11:32 AMMark MikofskiGithub can make forks (like a clone of another repo) and you can make edits, but you don't want to use the web ui for all of your writing, and it would never work for stuff like comsol or other software packages
there are so many clients which depend on your machine: github has a client called github for windows and altho it is helplessly st00pid, a lot of people use it anyway, I have no idea why, it makes everything soooooo much harder
msysgit is a client for windows that has everything you need.
let me share my desktop and I'll walk you through the steps above
but first step Z: after working on your cool idea, you decide to bring it back into the fold, you've been making changes and commiting them in your branch, so first return to the main branch called master (git checkout master)
then merge the changes from your "cool idea" branch (git merge myNewIdea)
what's your desk extension?


 The request to join the sharing session that was sent to Kat Han has expired.


 The request to join the sharing session that was sent to Kat Han has expired.