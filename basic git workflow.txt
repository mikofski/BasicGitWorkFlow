11:11 AMKat HanHi Mark!


11:11 AMMark Mikofskiding dong


11:11 AMKat HanI'm here and I'm making a GitHub account


11:12 AMMark Mikofskisend me your user name


11:12 AMKat HanThere are several plans
kathyhan4


11:12 AMMark Mikofskifree duh


11:12 AMKat Hangreat


11:12 AMMark Mikofskiwell actuall sunpower pays 


11:12 AMKat HanOK, so there is Large, Medium, Small, Micro, Free
And I believe I can be added to an organization
Do you want me to call you?


11:14 AMMark Mikofskijust sent you an invite to join the SunPower Modules team - you're the only member


11:15 AMKat HanIt's a little sad and lonely, but I appreciate the invite 


11:15 AMMark Mikofskithere's lots of lit on Git
but the best resources are the ProGit book by scott chacon http://git-scm.com/book
the reference docs http://git-scm.com/doc


11:16 AMKat HanDo you need to read a whole book to learn how to use version control software?


11:17 AMMark Mikofskiit's on the internet, just google the terms or actions you need to figure out, and then just skim enough until your uber awesome brain completes the pattern automatically
thanks brain
github help pages are also great https://help.github.com/
have you used version control before? like subversion, cvs (not the chain store), or like any of the one million other vcs tools?


11:19 AMKat HanHahaha, I love your approach, let's hope it works
I have discussed version control a lot but have not been in charge of implmenting any of the software
for the solar vehicle project


11:20 AMMark MikofskiI'll give you the 10k[ft] primer:
0. install a local client (msysgit) and sign up for some remote repository service (Github)


11:21 AMKat HanYou have a step "0"??


11:22 AMMark Mikofski1. create a fresh clean repository (git init my_new_repo) or clone an existing one (git clone https://github.com/SunPower/SimEng)


11:22 AMKat HanI'm emailing myself these notes that you are messaging me, by the way


11:22 AMMark Mikofskicommunicator is part of outlook all of your conversations are stored in outlook
under "conversation history"


11:23 AMKat HanYes, but an email to myself is my "to do" list


11:23 AMMark Mikofskiuse trello


11:23 AMKat HanI just started looking in to trello


11:23 AMMark Mikofskihttps://trello.com/markmikofski/recommend 


11:23 AMKat HanWe had a whole training about how people manage their to do lists on Friday


11:23 AMMark Mikofskisign up and I get 1 month of free stickers!
yay!


11:23 AMKat Hanfree stickers?


11:24 AMMark Mikofskitrello is sugar
I have no idea what the stickers are for


11:24 AMKat Hanlike, delicious and makes you a bit sick sometimes?


11:25 AMMark Mikofskithat would make more sense, but I meant as in easy, not hard on brain, actually the more I think about it, it makes no sense, completely backwards


11:25 AMKat Hanha!
well, wait, we were at step 1
is there a step 2?


11:25 AMMark Mikofskias I was saying step 2: do some work, eg write some docs, make some models, write some code, etc
1. create a fresh clean repository (git init my_new_repo) or clone an existing one (git clone https://github.com/SunPower/SimEng)
step 3: save your changes in the repository (git add file1 file2 file3) then (git commit -m "add paragraph explaining basic version control workflow")
step 4: after sever commits push your changes up to the remote (git push)


11:27 AMKat HanThis is really going to help my modeling!!!


11:29 AMMark Mikofskistep X: later when you're at a different laptop and want to make a quick change or if you work with someone else, pull the changes from [your other machine|your coworker] (git pull)
step Y: you had a totally awesome idea, but you don't want to f* up your stuff that is **finally** working so you create a branch (git checkout -b myNewIdea)


11:30 AMKat Hanbut the other laptop needs to have a local client
right?


11:31 AMMark Mikofskistep 0 is for everyone


11:31 AMKat HanOr is there a web interface?


11:31 AMMark Mikofskiyes


11:31 AMKat Hana branch!  That's brilliant.  


11:32 AMMark MikofskiGithub can make forks (like a clone of another repo) and you can make edits, but you don't want to use the web ui for all of your writing, and it would never work for stuff like comsol or other software packages
there are so many clients which depend on your machine: github has a client called github for windows and altho it is helplessly st00pid, a lot of people use it anyway, I have no idea why, it makes everything soooooo much harder
msysgit is a client for windows that has everything you need.
let me share my desktop and I'll walk you through the steps above
but first step Z: after working on your cool idea, you decide to bring it back into the fold, you've been making changes and commiting them in your branch, so first return to the main branch called master (git checkout master)
then merge the changes from your "cool idea" branch (git merge myNewIdea)
what's your desk extension?


 The request to join the sharing session that was sent to Kat Han has expired.


 The request to join the sharing session that was sent to Kat Han has expired.